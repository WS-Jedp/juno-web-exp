// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum PILLARS {
  SCIENCE
  ART
  TECHNOLOGY
}

// BEINGS
model Being {
  id                Int @id @default(autoincrement())
  name              String
  lastName          String
  credentialsId     Credential?
  partnerId         Partner?
  createdAt         DateTime @default(now())
  updatedAt         DateTime?
}

model Partner {
  id                Int @id @default(autoincrement())
  name              String
  description       String?
  abstract          String
  being             Being @relation(fields: [beingId], references: [id])
  projects          Project[]
  partnerCategory   PartnerCategory @default(SOCIAL)
  beingId           Int
  createdAt         DateTime @default(now())
  updatedAt         DateTime?
}
enum PartnerCategory {
  AGENCY
  SOCIAL
  RESEARCH
  FREELANCE
  COMPANY
}

model Credential {
  id                Int @id @default(autoincrement())
  username          String
  email             String  @unique
  password          String
  credentialType    CredentialType  @default(JUNO)
  being             Being @relation(fields: [beingId], references: [id])
  beingId           Int
}
enum CredentialType {
  JUNO
  ALLY
  PARTNER
}


// PROJECTS AND IDEAS
model Project {
  id                Int @id @default(autoincrement())
  name              String
  abstract          String?
  description       String
  cover             String
  state             ProjectState @default(COMING_SOON)
  category          ProjectCategory @default(SOCIAL)
  partners          Partner[]
  storyContent      StoryContent? @relation(fields: [storyContentId], references: [id])
  storyContentId    Int?
  createdAt         DateTime @default(now())
  updatedAt         DateTime?
  finishedAt        DateTime?
}

enum ProjectCategory {
  ART
  SCIENCE
  TECHNOLOGY
  SOCIAL
}
enum ProjectState {
  ACCOMPLISHED
  COMING_SOON
}

model Idea {
  id                      Int @id @default(autoincrement())
  title                   String
  abstract                String
  introductoryQuestion    String
  cover                   String
  category                IdeaCategory @default(STATE)
  storyContent            StoryContent? @relation(fields: [storyContentId], references: [id])
  storyContentId          Int?
  createdAt               DateTime @default(now())
  updatedAt               DateTime?
}
enum IdeaCategory {
  ARTICLE
  ESSAY
  STATE
}

model StoryContent {
  id                Int @id @default(autoincrement())
  content           String
  ideaId            Idea?
  projectId         Project?
}


// SERVICES AND STUDIES
model Service {
  id                  Int @id @default(autoincrement())
  name                String
  description         String
  whyNeeded           String?
  whyJuno             String?
  studies             Study[]
  pilar               PILLARS @default(TECHNOLOGY)
  offeredSince        Int
  updatedAt           DateTime?
}

model Study {
  id                  Int @id @default(autoincrement())
  name                String
  description         String
  whyNeeded           String?
  experience          StudyExperience @default(MIDDLE)
  state               StudyState  @default(MASTERED)
  services            Service[]
  pilar               PILLARS @default(TECHNOLOGY)
  startedAt           DateTime @default(now())
  masteredAt          DateTime?
  currentStudy        CurrentStudy?
}

enum StudyExperience {
  JUNIOR
  MIDDLE
  SENIOR
  MASTER
}

enum StudyState {
  MASTERED
  LEARNING
}

model CurrentStudy {
  id                Int @id @default(autoincrement())
  study             Study @relation(fields: [studyId], references: [id])
  studyId           Int
  progress          Int @default(50)
}
